name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout do código
      - name: Checkout Code
        uses: actions/checkout@v3

      # Configuração de cache para dependências Node.js
      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Obter a data e hora
      - name: Set Image Tag with Date
        id: image_tag
        run: |
          TIMESTAMP=$(date +'%H_%M_%d_%m_%Y')
          echo "IMAGE_TAG=${{ github.ref_name }}_${TIMESTAMP}" >> $GITHUB_ENV

      # Instalar dependências e gerar build
      - name: Install Dependencies and Build
        run: |
          npm install --legacy-peer-deps
          npm run build -- --configuration=production

      - name: Install Quill Dependency
        run: npm install quill



      # Construir a imagem Docker
      - name: Build Docker Image
        run: |
          DOCKERFILE="Dockerfile"
          if [ ! -f "$DOCKERFILE" ]; then
            echo "Dockerfile $DOCKERFILE not found, using default Dockerfile"
          else
            echo "Using Dockerfile $DOCKERFILE"
          fi

          BUILD_ENV="${{ github.ref_name }}"

          docker build \
            --build-arg BUILD_ENV="$BUILD_ENV" \
            -f "$DOCKERFILE" \
            -t b3r3ch1t/sismaanaim-cantina-angular:latest \
            -t b3r3ch1t/sismaanaim-cantina-angular:${{ env.IMAGE_TAG }} .

      # Login no DockerHub
      - name: DockerHub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Push da imagem Docker
      - name: Push Docker Image
        run: |
         docker push b3r3ch1t/sismaanaim-cantina-angular:latest
         docker push b3r3ch1t/sismaanaim-cantina-angular:${{ env.IMAGE_TAG }}
