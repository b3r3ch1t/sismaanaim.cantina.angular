name: Docker Publish

on:
  push:
    branches:
      - main
      - staging
      - dev
      - hml

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Determine branch and tags
        id: vars
        run: |
          export TZ=America/Sao_Paulo
          BRANCH_NAME=${{ github.ref_name }}
            TIMESTAMP=$(date +'%d_%m_%Y_%H_%M')
          if [ "$BRANCH_NAME" = "main" ]; then
            TAG_LATEST="prod_latest"
            TAG_TIMESTAMP="prod_${TIMESTAMP}"
            CONFIGURATION="production"
            NGINX_CONF="nginx.conf"
          elif [ "$BRANCH_NAME" = "staging" ]; then
            TAG_LATEST="hml_latest"
            TAG_TIMESTAMP="hml_${TIMESTAMP}"
            CONFIGURATION="staging"
            NGINX_CONF="nginx.conf.staging"
          else
            TAG_LATEST="dev_latest"
            TAG_TIMESTAMP="dev_${TIMESTAMP}"
            CONFIGURATION="development"
            NGINX_CONF="nginx.conf"
          fi
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          echo "TAG_LATEST=$TAG_LATEST" >> $GITHUB_ENV
          echo "TAG_TIMESTAMP=$TAG_TIMESTAMP" >> $GITHUB_ENV
          echo "CONFIGURATION=$CONFIGURATION" >> $GITHUB_ENV
          echo "NGINX_CONF=$NGINX_CONF" >> $GITHUB_ENV

      - name: Build and push Docker image
        run: |
          docker build \
            --build-arg BUILD_ENV=${{ env.CONFIGURATION }} \
            --file Dockerfile \
            --tag b3r3ch1t/sismaanaim-local-front:${{ env.TAG_LATEST }} \
            --tag b3r3ch1t/sismaanaim-local-front:${{ env.TAG_TIMESTAMP }} \
            .
          docker push b3r3ch1t/sismaanaim-local-front:${{ env.TAG_LATEST }}
          docker push b3r3ch1t/sismaanaim-local-front:${{ env.TAG_TIMESTAMP }}

      - name: Copy NGINX configuration
        run: |
          sudo cp ${{ env.NGINX_CONF }} /etc/nginx/conf.d/default.conf
